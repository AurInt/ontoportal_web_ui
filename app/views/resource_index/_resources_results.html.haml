- require 'cgi'

:css
  .count {
    text-align: right !important;
  }

%div#resource_table{:style => "margin-top: 1em;"}
  %div#result_counts
  %h2{:style => "font-size: 150%; margin-bottom: 3px;"}
    Search Results
    %a.h2_link{:href => "javascript:void(0);", :id => "show_hide_no_results"} <span class="show_hide_text">show</span><span class="show_hide_text not_visible">hide</span> resources with no matches

  %table.zebra{:style => "width: 600px;"}
    %thead
      %tr
        %th Resource
        %th.count Matched Records
        %th.count % Matched
        %th.count Total Records
    %tbody
      -@elements.each do |r|
        -resource_data = @resources_hash[r.resourceId]
        -resource_name = resource_data[:resourceName]
        %tr{:class => r.totalResults.to_i == 0 && "zero_results not_visible"}
          %td
            %a.results_link{:href => "javascript:void(0);", :data => {:resource_id => r.resourceId, :resource_name => resource_name}} #{resource_name}
            / %a.resource_site{:href => @resources_hash[r.resourceId][:resourceURL], :target => "_blank", :id => "resource_link_#{r.resourceId}"} site
            / %span{:class => "ui-icon ui-icon-extlink", :style => "display: inline-block; vertical-align: text-bottom;"}
          %td.count
            -if r.totalResults > 0
              %a.results_link{:href => "javascript:void(0);", :data => {:resource_id => r.resourceId, :resource_name => resource_name}} #{number_with_delimiter(r.totalResults, :delimiter => ",")}
            -else
              #{number_with_delimiter(r.totalResults, :delimiter => ",")}
          %td.count= (((r.totalResults.to_f / resource_data[:totalElements].to_f)*100*100.0).ceil/100.0).to_s + "%" rescue "0%" # Complicated formula for rounding up to nearest tenth
          %td.count #{number_with_delimiter(resource_data[:totalElements], :delimiter => ",")}

%h2.resource_title.not_visible
  %span#resource_title
  %span
    %a.h2_link{:href => "javascript:void(0);", :id => "show_all_resources"} show all resources

%div#resource_results
  -@elements.each do |r|
    -@resource_results = r
    %div.resource_info.resource_details.not_visible{:id => "resource_info_#{r.resourceId}"}
      %div.resource_image
        %img{:src => @resources_hash[r.resourceId][:resourceLogo], :class => "resource_image"}
      =render :partial => "resource_results"
      %div.clearing

%div.clearing

:javascript
  bpResourceIndexEmbedded = (jQuery("#resource_table").parents("div.resource_index_embed").length > 0);
  var resources = #{@resources_hash.to_json};
  updateCounts();
