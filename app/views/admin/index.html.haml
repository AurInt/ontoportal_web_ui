= javascript_include_tag "/javascripts/alertify/alertify.min.js"
- @title = "BioPortal Administration"
:javascript
  // memcached reset functions ------------------
  function resetMemcacheConnection() {
    ajaxCall("resetcache");
  }

  function flushMemcache() {
    ajaxCall("clearcache");
  }

  function resetStatusMessages() {
    jQuery(".success_message").hide();
    jQuery(".error_message").hide();
    jQuery(".success_message").html("");
    jQuery(".error_message").html("");
  }

  function ajaxCall(operation) {
    jQuery.ajax({
      type: "POST",
      url: "/admin/" + operation,
      data: "",
      dataType: "text",
      beforeSend: function(XMLHttpRequest) {
        resetStatusMessages();
        jQuery(".progressSpinner").show();
      },
      success: function(data, msg) {
        jQuery(".progressSpinner").hide();
        jQuery(".success_message").text(data).html();
        jQuery(".success_message").show();
      },
      error: function(XMLHttpRequest, textStatus, errorThrown) {
        jQuery(".progressSpinner").hide();
        jQuery(status).html(errorThrown + " " + textStatus);
        jQuery(".error_message").show();
      }
    });
  }

  function updateStatus(XMLHttpRequest, status) {
    jQuery(status).html("Loading");
  }
  // end: memcached reset functions ------------------

  // ontologies table functions ------------------
  var ontologiesTable;
  var showAll = 1;

  function toggleShow(val) {
    showAll = val;
  }

  function deleteOntology(acronym) {
    alertify.confirm("Are you sure you want to delete <span style='color:red;font-weight:bold;'>" + acronym + "</span> ontology and all its artifacts?<br/><b>This action CAN NOT be undone!!!</b>", function(e) {
      if (e) {
        doSubmit(acronym, "/admin/ontologies/" + acronym, "DELETE", {});
      }
    });
    return false;
  }

  function doSubmit(acronym, path, method, params) {
    jQuery.ajax({
      type: method,
      url: path,
      data: params,
      dataType: "json",
      beforeSend: function(XMLHttpRequest) {
        resetStatusMessages();
        jQuery(".progressSpinner").show();
      },
      success: function(data) {
        jQuery('.progressSpinner').hide();
        if (data) {
          if (method == "DELETE") {
            //remove row from the table
            var ontologiesTable = jQuery('#adminOntologies').DataTable();
            ontologiesTable.row(jQuery("#tr_" + acronym)).remove().draw();
            jQuery(".success_message").html(data["success"]);
            jQuery(".success_message").show();
          }
        }
      },
      error: function(errorData) {
        jQuery('.progressSpinner').hide();
        jQuery(".error_message").html(errorData["error"]);
        jQuery(".error_message").show();
        console.log("error", errorData);
      }
    });
  }

  jQuery(document).ready(function() {
    ontologiesTable = jQuery("#adminOntologies").dataTable({
      "bAutoWidth": false,
      "bLengthChange": false,
      "bFilter": true,
      "oLanguage": {
        "sSearch": "Filter: "
      },
      "bInfo": true,
      "bPaginate": true,
      "iDisplayLength": 100,
      "bSort": true,
      "asStripClasses": ["","alt"],
      "dom": '<"ontology_nav">frtip',
      "fnDrawCallback": function(oSettings) {
        // Fix IE whitespace bug in table by removing whitespace
        // See: http://datatables.net/forums/discussion/5481/bug-ghost-columns-when-generating-large-tables
        if (navigator.appName == 'Microsoft Internet Explorer') {
          var expr = new RegExp('>[ \t\r\n\v\f]*<', 'g');
          var tbhtml = jQuery('#adminOntologies').children("tbody").html();
          jQuery('#adminOntologies').children("tbody").html(tbhtml.replace(expr, '><'));
        }
      }
    });

    // make sure facebox window is empty before populating it
    // otherwise ajax requests stack up and you see more than
    // one ontology's submissions
    jQuery(document).bind('beforeReveal.facebox', function() {
      jQuery("#facebox .content").empty();
    });
    // remove hidden divs for submissions of previously
    // clicked ontologies
    jQuery(document).bind('reveal.facebox', function() {
      jQuery('div[id=facebox]:hidden').remove();
    });

    jQuery("div.ontology_nav").html('<span class="toggle-row-display"><a href="#" onclick="toggleShow(true);">All</a> | <a href="#" onclick="toggleShow(false);">Problem Only</a></span><span class="progressSpinner"><img src="/images/spinners/spinner_000000_16px.gif" style="vertical-align: text-bottom;margin-left:20px;"></span>');
    jQuery(".error_message").hide();
    jQuery(".success_message").hide();
    jQuery(".progressSpinner").hide();

    jQuery.fn.dataTableExt.afnFiltering.push(
      function( oSettings, aData, iDataIndex ) {
        var row = oSettings.aoData[iDataIndex].nTr;
        if (!showAll && !row.classList.contains("problem")) {
          return false;
        }
        return true;
      }
    );

    // for toggling between all and problem ontologies
    jQuery(".toggle-row-display a").live("click", function() {
      jQuery("#adminOntologies").dataTable().fnDraw();
      return false;
    });

    // Keep header at top of table even when scrolling
    new FixedHeader(ontologiesTable);
  });

#DescriptionDialog{:style => "display: none", :title => "admin description"}
%h1.tab_header Ontology Administration
%br

%table.memcached_utilities{:style => "float:left;margin-left:8px;"}
  %tr
    %td
      %a{:href => "javascript:;", :class => "link_button ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only", :onclick => "flushMemcache();"}
        %span{:class => "ui-button-text"} Flush Memcache
    %td
      %a{:href => "javascript:;", :class => "link_button ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only", :onclick => "resetMemcacheConnection();"}
        %span{:class => "ui-button-text"} Reset Memcache Connection
    %td
      %span#request_status{:class => "success_message"}
      %span#request_status{:class => "error_message"}
%p.tab_description{:style => "clear: both;padding-top:25px;"}
  Report generated on #{@report_date}
  = render partial: "layouts/ontology_report_table"
