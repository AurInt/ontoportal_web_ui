<%@title = "Search"%>

<%=javascript_include_tag "JqueryPlugins/datatables/js/jquery.dataTables.js"%>
<%=javascript_include_tag "JqueryPlugins/facebox/facebox.js"%>

<%=stylesheet_link_tag "/javascripts/JqueryPlugins/facebox/facebox.css"%>

<script type="text/javascript">
var resultsTable;

	jQuery(document).ready(function(){
		jQuery("#search_button").button();
		
		resultsTable = jQuery("#search_results").dataTable({
			bPaginate: false,
      bFilter: false,
      bAutoWidth: false,
			aaSorting: [],
			oLanguage: {
				sZeroRecords: "No search results found"
      },
      "aoColumn": [ 
            { "sWidth": "50%" },
            { "sWidth": "20%" },
            { "sWidth": "30%" }
      ]
		});
	});
</script>

<style type="text/css">
	form.button-to {
		float: left;
	}
	
	#ontology_picker_head {
		font-size: 10pt !important;
	}
	
	.not_visible {
		position: fixed !important;
		left: -9999px !important;
	}
	
	#search_results_container #search_results_info {
		display: none !important;
	}
	
	#search_spinner {
		display: inline-block;
		padding-top: 4px;
	}
	
	span.additional {
		font-size: x-small;
		display: block;
		float: right;
		padding-right: .3em;
		margin-left: 1em;
	}
	
	#search_options #ontology_ontologyId {
		display: none;
	}
</style>

<script type="text/javascript">
	jQuery(document).ready(function(){
		// Show/hide on refresh
		if (jQuery("#search_select_ontologies").is(":checked")) {
			jQuery("#ontology_picker_options").removeClass("not_visible");
		}
		
		jQuery("#search_select_ontologies").change(function(){
			if (jQuery(this).is(":checked")) {
				jQuery("#ontology_picker_options").removeClass("not_visible");
			} else {
				jQuery("#ontology_picker_options").addClass("not_visible");
				jQuery("#ontology_ontologyId").val("");
			  jQuery("#ontology_ontologyId").trigger("liszt:updated");
			}
		});
		
		
		jQuery("#search_button").click(function(event){
			event.preventDefault();
			
			jQuery("#search_spinner").show();
			
			var ont_val = jQuery("#ontology_ontologyId").val();
			
			var onts = (ont_val == null) ? "" : ont_val.join(",");
			var query = jQuery("#search_keywords").val();
			var exactMatch = jQuery("#search_exact_match").is(":checked");
			var includeProps = jQuery("#search_include_props").is(":checked");
			
			jQuery.ajax({
				url: "/search/json?page_size=99999&ontology_ids="+onts+"&query="+query+"&exact_match="+exactMatch+"&include_props="+includeProps,
				dataType: "json",
				async: false,
				success: function(data){
					var results = [];

          if (!jQuery.isEmptyObject(data)) {
            jQuery(data.results).each(function(){
            	var res = this;
							var additionalSpan = "<span style='display: none;' class='additional'><a href='/ajax/term_details/"+res.ontologyId+"?styled=false&conceptid="+encodeURIComponent(res.conceptId)+"' class='term_details light_pop'>details</a> | <a href='javascript:void(0);' data-bp_ontologyid='"+res.ontologyId+"' data-bp_conceptid='"+encodeURIComponent(res.conceptId)+"' class='term_visualize'>visualize</a></span>";

            	var row = [
								"<div class='term_link'>"+additionalSpan+"<a href='/ontologies/"+res.ontologyId+"?p=terms&conceptid="+encodeURIComponent(res.conceptId)+"'>"+res.preferredName+"</a></div>",
								res.recordTypeFormatted,
								"<a href='/ontologies/"+res.ontologyId+"'>"+res.ontologyDisplayLabel+"</a>"
							];

		        	results.push(row);
            });
          }

	        resultsTable.fnClearTable();
					resultsTable.fnSortNeutral();
          resultsTable.fnAddData(results);

					jQuery("a.light_pop").facebox();

          jQuery("#result_stats").html(data.total_results + " results");
					jQuery("table#search_results div.term_link").hover(termHoverIn, termHoverOut);
          jQuery("table#search_results").show();
        }
			});
			
			jQuery("#search_spinner").hide();
		});
		
		// Search on enter
		jQuery("#search_keywords").bind("keyup", function(event){
			if (event.which == 13) {
				jQuery("#search_button").click();
			}
		});
		
		// Details/visualze link to show details pane and visualize flexviz
		jQuery.facebox.settings.closeImage = '/javascripts/JqueryPlugins/facebox/closelabel.png';
		jQuery.facebox.settings.loadingImage = '/javascripts/JqueryPlugins/facebox/loading.gif';
		
		// Check for existing parameters/queries and update UI accordingly
		var params = jQuery.QueryString;
		if ("q" in params || "query" in params) {
			var query = ("q" in params) ? params["q"] : params["query"];
			jQuery("#search_keywords").val(query);
			
			if (params["exactmatch"] == "true") {
				jQuery("#search_exact_match").click();
			}
			
			if (params["searchproperties"] == "true") {
				jQuery("#search_include_props").click();
			}
			
			if ("ontologyids" in params) {
				var ontologyIds = params["ontologyids"].split(",");
				jQuery("#search_select_ontologies").attr("checked", false)
				jQuery("#ontology_ontologyId").val(ontologyIds);
			  jQuery("#ontology_ontologyId").trigger("liszt:updated");
			  jQuery("#search_select_ontologies").click().change();
			}
			
			jQuery("#search_button").click();
		} else if (jQuery("#search_keywords").val() != "") {
			jQuery("#search_button").click();
		}

    // Use pop-up with flex via an iframe for "visualize" link
    jQuery("a.term_visualize").click(function(){
      var ontologyid = jQuery(this).attr("data-bp_ontologyid");
      var conceptid = jQuery(this).attr("data-bp_conceptid");

      jQuery("#flexviz").html('<iframe src="/flexviz/'+ontologyid+'?conceptid='+conceptid+'" frameborder=0 height="500px" width="500px" scrolling="no"></iframe>');
      jQuery.facebox({ div: '#flexviz' });
    });
	});
	
	// Datatables reset sort extension
	jQuery.fn.dataTableExt.oApi.fnSortNeutral = function ( oSettings ) {
		/* Remove any current sorting */
		oSettings.aaSorting = [];
		
		/* Sort display arrays so we get them in numerical order */
		oSettings.aiDisplay.sort( function (x,y) {
			return x-y;
		} );
		oSettings.aiDisplayMaster.sort( function (x,y) {
			return x-y;
		} );
		
		/* Redraw */
		oSettings.oApi._fnReDraw( oSettings );
	}
	
	var termHoverIn = function(){
		var additional = jQuery(this).children("span.additional");
		additional.show();
		additional.css("margin-top", jQuery(this).innerHeight() / 2 - additional.innerHeight() / 2 + "px");
	}
	
	var termHoverOut = function(){
		jQuery(this).children("span.additional").hide();
	}
</script>

<div style="padding: 1em;">
	<div id="search_input" style="margin-bottom: 1em;">
		<h2 style="margin-bottom: 3px;">Search <%=$SITE%></h2>
		<%=text_field :search, :keywords, :style => "width: 426px; height: 20px; float: left; margin-right: 1em;"%>
		<%=button_to "Search", {}, :style => "font-size: .75em !important;", :id => "search_button"%>
		&nbsp;<span id="search_spinner" style="display: none;"><img style="vertical-align: inherit;" src="/images/spinners/spinner_000000_16px.gif"></span>
		
		<div id="search_options" style="padding-top: .6em; clear: both;">
			<%=check_box :search, :exact_match%> <%=label :search, :exact_match, "Exact match only"%>&nbsp;&nbsp;&nbsp;
			<%=check_box :search, :include_props%> <%=label :search, :include_props, "Also search properties"%>&nbsp;&nbsp;&nbsp;
			
			<%=check_box :search, :select_ontologies%> <%=label :search, :select_ontologies, "Select ontologies to search"%>
			<div id="ontology_picker_options" style="margin-top: 1em; position: relative; left: 2px;" class="not_visible">
				<%= render :partial => "shared/ontology_picker"%>
			</div>
		</div>
	</div>
	
	<div id="search_results_container" style="width: 95%; margin-top: .5em;">
		<div id="result_stats" style="text-align: right;"></div>
		
		<table id="search_results" style="display: none; table-layout: fixed;" class="zebra">
			<thead>
				<th style="width: 60%;">Term Name</th>
				<th style="width: 10%;">Matched</th>
				<th style="width: 30%;">Ontology</th>
			</thead>
			<tbody id="search_results_body">
			</tbody>
		</table>
	</div>
</div>


<div id="flexviz" style="display: none;">
</div>
