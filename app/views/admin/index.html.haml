= javascript_include_tag "/javascripts/alertify/alertify.min.js"
- @title = "BioPortal Administration"
:javascript
  // memcached reset functions ------------------
  function resetMemcacheConnection() {
    ajaxCall("POST", "resetcache", {});
  }

  function flushMemcache() {
    ajaxCall("POST", "clearcache", {});
  }
  // end: memcached reset functions ------------------

  // ontologies table functions ------------------
  var ontologiesTable;
  var showAll = 1;

  function toggleShow(val) {
    showAll = val;
  }

  function deleteOntologies(acronyms) {
    ontMsg = acronyms.replace(new RegExp(',', 'g'), ', ');
    alertify.set({labels: {ok: "Delete!", cancel: "Cancel"}});
    alertify.confirm("You are about to delete the following ontologies:<br/><span style='color:red;font-weight:bold;'>" + ontMsg + "</span><br/><b>This action CAN NOT be undone!!! Are you sure?</b>", function(e) {
      if (e) {
        ajaxCall("DELETE", "ontologies", {ontologies: acronyms});
      }
    });
    return false;
  }

  function performActionOnOntologies() {
    var actionSelect = jQuery('#admin_action');
    var action = actionSelect.val();
    var acronyms = '';

    if (!action) {
      alertify.alert("Please choose an action to perform on the selected ontologies.");
      return;
    }

    var ontologiesTable = jQuery('#adminOntologies').DataTable();
    ontologiesTable.rows('.selected').every(function() {
      //var d = this.data();
      //var idx = this.index();
      //var tr = jQuery(this).parents('tr');
      //var cell = ontologiesTable.cell(idx, 0);
      //var td0HTMLElem = cell.node();
      var trId = this.node().id;
      acronyms += trId.substring("tr_".length) + ",";
    });

    if (acronyms.length) {
      acronyms = acronyms.slice(0, -1);
    } else {
      alertify.alert("Please select at least one ontology from the table to perform action on.");
      return;
    }

    switch(action) {
      case "delete":
        deleteOntologies(acronyms);
        break;
      case "reparse":
        console.log("reparsing");
        break;
    }
  }

  function deleteSubmission(acronym, submissionId) {
    alertify.confirm("Are you sure you want to delete submission <span style='color:red;font-weight:bold;'>" + submissionId + "</span> for ontology <span style='color:red;font-weight:bold;'>" + acronym + "</span>?<br/><b>This action CAN NOT be undone!!!</b>", function(e) {
      if (e) {
        ajaxCall("DELETE", "ontologies/" + acronym + "/submissions/" + submissionId, {});
      }
    });
  }

  function refreshReport() {
    alertify.confirm("Refreshing this report takes a while...<br/>Are you sure you're ready for some coffee time?", function(e) {
      if (e) {
        console.log("refreshing report...");
      }
    });
    return false;
  }

  function resetStatusMessages() {
    jQuery(".success_message").hide();
    jQuery(".error_message").hide();
    jQuery(".success_message").html("");
    jQuery(".error_message").html("");
  }

  function ajaxCall(httpMethod, operation, params) {
    jQuery.ajax({
      type: httpMethod,
      url: "/admin/" + operation,
      data: params,
      dataType: "text",
      beforeSend: function(request) {
        resetStatusMessages();
        jQuery(".progressSpinner").show();
      },
      success: function(dataJson, msg) {
        data = JSON.parse(dataJson);
        jQuery(".progressSpinner").hide();

        if (data.errors) {
          jQuery(".error_message").text(data.errors).html();
          jQuery(".error_message").show();
        }

        if (data.success) {
          // deleting ontologies
          if (operation === "ontologies" && httpMethod === "DELETE" &&
              params["ontologies"]) {
            var ontologies = params["ontologies"].split(",");
            var ontologiesTable = jQuery('#adminOntologies').DataTable();

            // remove each ontology row from the table
            for (var i = 0; i < ontologies.length; i++) {
              ontologiesTable.row(jQuery("#tr_" + ontologies[i])).remove().draw();
            }
          } else {
            // deleting a single submission
            var re = /^ontologies\/([\w.\-]+)\/submissions\/(\d+)$/;
            var match = operation.match(re);

            // reload submissions facebox window
            if (match != null && httpMethod == "DELETE") {
              var acronym = match[1];
              jQuery.facebox({ ajax: "/admin/ontologies/" + acronym + "/submissions?time=" + new Date().getTime() });
            }
          }
          jQuery(".success_message").text(data.success).html();
          jQuery(".success_message").show();
        }
      },
      error: function(request, textStatus, errorThrown) {
        jQuery(".progressSpinner").hide();
        jQuery(".error_message").html(request.status + ": " + errorThrown);
        jQuery(".error_message").show();
      }
    });
  }

  jQuery(document).ready(function() {
    ontologiesTable = jQuery("#adminOntologies").dataTable({
      "bAutoWidth": false,
      "bLengthChange": false,
      "bFilter": true,
      "oLanguage": {
        "sSearch": "Filter: "
      },
      "bInfo": true,
      "bPaginate": true,
      "iDisplayLength": 100,
      "bSort": true,
      "asStripClasses": ["","alt"],
      "dom": '<"ontology_nav">frtip',
      "fnDrawCallback": function(oSettings) {
        // Fix IE whitespace bug in table by removing whitespace
        // See: http://datatables.net/forums/discussion/5481/bug-ghost-columns-when-generating-large-tables
        if (navigator.appName == 'Microsoft Internet Explorer') {
          var expr = new RegExp('>[ \t\r\n\v\f]*<', 'g');
          var tbhtml = jQuery('#adminOntologies').children("tbody").html();
          jQuery('#adminOntologies').children("tbody").html(tbhtml.replace(expr, '><'));
        }
      }
    });

    // make sure facebox window is empty before populating it
    // otherwise ajax requests stack up and you see more than
    // one ontology's submissions
    jQuery(document).bind('beforeReveal.facebox', function() {
      jQuery("#facebox .content").empty();
    });
    // remove hidden divs for submissions of previously
    // clicked ontologies
    jQuery(document).bind('reveal.facebox', function() {
      jQuery('div[id=facebox]:hidden').remove();
    });
    // convert facebox window into a modal mode
    jQuery(document).bind('loading.facebox', function() {
      jQuery(document).unbind('keydown.facebox');
      jQuery('#facebox_overlay').unbind('click');
    });

    jQuery("div.ontology_nav").html('<span class="toggle-row-display"><a id="show_all_ontologies_action" href="javascript:;"">All</a> | <a id="show_problem_only_ontologies_action" href="javascript:;">Problem Only</a></span>');
    jQuery(".error_message").hide();
    jQuery(".success_message").hide();
    jQuery(".progressSpinner").hide();

    jQuery.fn.dataTableExt.afnFiltering.push(
      function(oSettings, aData, iDataIndex) {
        var row = oSettings.aoData[iDataIndex].nTr;
        if (!showAll && !row.classList.contains("problem")) {
          return false;
        }
        return true;
      }
    );

    // for toggling between all and problem ontologies
    jQuery(".toggle-row-display a").live("click", function() {
      jQuery("#adminOntologies").dataTable().fnDraw();
      return false;
    });

    // allow selecting of rows
    jQuery('#adminOntologies tbody').on('click', 'tr', function() {
      jQuery(this).toggleClass('selected');
    });

    // BUTTON onclick actions ---------------------------------------

    // onclick action for "Go" button for performing an action on a set of ontologies
    jQuery("#admin_action_submit").click(function() {
      performActionOnOntologies();
    });

    // onclick action for "Flush Memcache" button
    jQuery("#flush_memcache_action").click(function() {
      flushMemcache();
    });

    // onclick action for "Reset Memcache Connection" button
    jQuery("#reset_memcache_connection").click(function() {
      resetMemcacheConnection();
    });

    // onclick action for "Show All Ontologies" link
    jQuery("#show_all_ontologies_action").click(function() {
      toggleShow(true);
    });

    // onclick action for "Show Problem Only Ontologies" link
    jQuery("#show_problem_only_ontologies_action").click(function() {
      toggleShow(false);
    });

    // end: BUTTON onclick actions -----------------------------------

    // Keep header at top of table even when scrolling
    new FixedHeader(ontologiesTable);
  });

#DescriptionDialog{:style => "display: none", :title => "admin description"}
%h1.tab_header Ontology Administration
%br
%table.memcached_utilities{:style => "float:left;margin-left:8px;"}
  %tr
    %td
      %a#flush_memcache_action{:href => "javascript:;", :class => "link_button ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"}
        %span{:class => "ui-button-text"} Flush Memcache
    %td
      %a{:href => "javascript:;", :class => "link_button ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"}
        %span{:class => "ui-button-text"} Reset Memcache Connection
    %td
      %span.progressSpinner
        %img{:src => "/images/spinners/spinner_000000_16px.gif", :style => "vertical-align: text-bottom;"}
      %span.success_message
      %span.error_message
  %tr
    %td{:colspan => 2}
      Apply to Selected Rows:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      %select#admin_action{:name => "admin_action"}
        %option{:value => ""} Please Select
        %option{:value => "delete"} Delete
        %option{:value => "reparse"} Re-parse
      &nbsp;&nbsp;&nbsp;
      %a#admin_action_submit{:href => "javascript:;", :class => "link_button ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"}
        %span{:class => "ui-button-text"} Go
    %td{:style => "padding-left:20px;"}
      Report generated on #{@report_date}
      %a{:href => "javascript:;", :class => "link_button ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only", :onclick => "refreshReport();", :style => "margin-left:15px;"}
        %span{:class => "ui-button-text"} Refresh
%p.tab_description{:style => "clear: both;"}
  = render partial: "layouts/ontology_report_table"
