<%@title = "Search"%>

<%=stylesheet_link_tag "/javascripts/JqueryPlugins/facebox/facebox.css"%>

<%=javascript_include_tag "JqueryPlugins/datatables/js/jquery.dataTables.js"%>
<%=javascript_include_tag "JqueryPlugins/facebox/facebox.js"%>

<script type="text/javascript">
var resultsTable;

	jQuery(document).ready(function(){
		jQuery("#search_button").button();
		
		resultsTable = jQuery("#search_results").dataTable({
			bPaginate: false,
      bAutoWidth: false,
			aaSorting: [],
			oLanguage: {
				sZeroRecords: "No search results found"
      },
      "aoColumn": [
            { "sWidth": "30%" },
            { "sWidth": "20%" },
            { "sWidth": "50%" }
      ]
    });

    jQuery("#search_keywords").autocomplete({
      source: "/search/json_search_aggregated",
      minLength: 3,
      delay: 100,
      appendTo: "#search_input"
    });
    
	});
</script>

<style type="text/css">
	form.button-to {
		float: left;
	}
	
	#ontology_picker_head {
		font-size: 10pt !important;
	}
	
	.not_visible {
		position: fixed !important;
		left: -9999px !important;
	}
	
	#search_results_container #search_results_info {
		display: none !important;
  }

  #search_results_filter {
    display: none;
  }
	
	#search_spinner {
		display: inline-block;
		padding-top: 4px;
	}
	
	span.additional {
		font-size: x-small;
		display: block;
		float: right;
		padding-right: .3em;
    margin-left: 1em;
    color: gray;
	}

  span.additional a {
    color: gray;
    text-decoration: none;
  }

  span.additional a:hover {
    text-decoration: underline;
  }

	#search_options #ontology_ontologyId {
		display: none;
  }

  .term_details_pop {
    overflow: auto;
    width: 750px !important;
    display: block !important;
  }

  .popup_container {
    padding-left: 5px;
    letter-spacing: 0;
    font-size: x-small;
    text-transform: lowercase;
    position: absolute;
  }

  .bp_popup_link_active {
    background-color: white;
    z-index: 4000;
    border-bottom: none !important;
    border: solid thin gray;
    padding: .5em;
    position: relative;
  }

  .bp_popup_shadow {
    box-shadow: 0 0 10px gray;
  }

  .bp_popup_list {
    background-color: white;
    border: thin solid gray;
    padding: .5em;
    position: absolute;
    right: -150px;
    top: 17px;
    width: 300px;
    max-height: 250px;
    overflow: auto;
    text-transform: none;
    box-shadow: 0 0 10px gray;
    cursor: auto;
    z-index: 4001;
  }

  .matched_in .popup_container #matched_filter_list {
    width: 120px;
    right: -52px;
  }

  .ui-autocomplete {
    border-radius: 0 !important;
    background: white;
    font-size: inherit;
    text-align: left;
    max-width: 432px;
  }

</style>

<script type="text/javascript">
  jQuery(document).ready(function(){
    // Put cursor in search box by default
    jQuery("#search_keywords").focus();

		// Show/hide on refresh
		if (jQuery("#search_select_ontologies").is(":checked")) {
			jQuery("#ontology_picker_options").removeClass("not_visible");
		}
		
		jQuery("#search_select_ontologies").change(function(){
			if (jQuery(this).is(":checked")) {
				jQuery("#ontology_picker_options").removeClass("not_visible");
			} else {
				jQuery("#ontology_picker_options").addClass("not_visible");
				jQuery("#ontology_ontologyId").val("");
			  jQuery("#ontology_ontologyId").trigger("liszt:updated");
			}
		});

		jQuery("#search_button").click(function(event){
			event.preventDefault();
			
			jQuery("#search_spinner").show();
			
			var ont_val = jQuery("#ontology_ontologyId").val();
			
			var onts = (ont_val == null) ? "" : ont_val.join(",");
			var query = jQuery("#search_keywords").val();
			var exactMatch = jQuery("#search_exact_match").is(":checked");
			var includeProps = jQuery("#search_include_props").is(":checked");
			
			jQuery.ajax({
				url: "/search/json?page_size=99999&ontology_ids="+onts+"&query="+query+"&exact_match="+exactMatch+"&include_props=1",
				dataType: "json",
				async: false,
				success: function(data){
          var results = [];
          var ontologies = {};
          var ontology_links = [];
          var ontologies_for_sort = [];
          var ontologies_sorted = [];

          // Option to filter all ontologies
          
          ontologies_for_sort.push({label: "<a href='javascript:void(0);' class='ont_filter' data-bp_filter_label=''>All Ontologies (" + data.total_results + ")</a>", count: data.total_results});

          if (!jQuery.isEmptyObject(data)) {
            jQuery(data.results).each(function(){
            	var res = this;
							var additionalSpan = "<span class='additional'><a href='/ajax/term_details/"+res.ontologyId+"?styled=false&conceptid="+encodeURIComponent(res.conceptId)+"' class='term_details' rel='facebox[.term_details_pop]'>details</a> | <a href='javascript:void(0);' data-bp_ontologyid='"+res.ontologyId+"' data-bp_conceptid='"+encodeURIComponent(res.conceptId)+"' class='term_visualize'>visualize</a></span>";

              var elipses = (res.preferredName.length > 25) ? "..." : ""

            	var row = [
								"<div class='term_link'>"+additionalSpan+"<a title='"+res.preferredName+"' href='/ontologies/"+res.ontologyId+"?p=terms&conceptid="+encodeURIComponent(res.conceptId)+"'>"+res.preferredName.substring(0, 25)+elipses+"</a></div>",
								res.recordTypeFormatted,
								"<a href='/ontologies/"+res.ontologyId+"'>"+res.ontologyDisplayLabel+"</a>"
              ];

              ontologies[res.ontologyDisplayLabel] = (res.ontologyDisplayLabel in ontologies) ? ontologies[res.ontologyDisplayLabel] + 1 : 1;

		        	results.push(row);
            });
          }

          jQuery.each(ontologies, function(k, v){
              ontologies_for_sort.push({label: "<a href='javascript:void(0);' class='ont_filter' data-bp_filter_label='" + k + "'>" + k + " (" + v + ")</a>", count: v});
          });

          ontologies_for_sort.sort(function(a, b){return a.count < b.count});

          jQuery.each(ontologies_for_sort, function(){
            ontologies_sorted.push(this.label);
          });

          jQuery("#ontology_filter_list").html(ontologies_sorted.join("<br/>"));

          resultsTable.fnClearTable();
					resultsTable.fnSortNeutral();
          resultsTable.fnAddData(results);

          // Re-bind click event for ont filter to avoid weird "live" propagation issues
          filter_ontologies.init();

					jQuery("a[rel*=facebox]").facebox();

          // Align search results div
          var result_count = jQuery("#result_stats");
          result_count.html(data.total_results + " results");

          // jQuery("table#search_results div.term_link").hover(termHoverIn, termHoverOut);
          jQuery("table#search_results").show();
        }
			});
			
			jQuery("#search_spinner").hide();
		});
		
		// Search on enter
		jQuery("#search_keywords").bind("keyup", function(event){
			if (event.which == 13) {
        jQuery(".ui-autocomplete").hide();
        jQuery("#search_button").click();
        jQuery(".ui-autocomplete").hide();
			}
		});
		
		// Details/visualze link to show details pane and visualize flexviz
		jQuery.facebox.settings.closeImage = '/javascripts/JqueryPlugins/facebox/closelabel.png';
    jQuery.facebox.settings.loadingImage = '/javascripts/JqueryPlugins/facebox/loading.gif';

    // Position of popup for details
    jQuery(document).bind('reveal.facebox', function(){
      if (jQuery("div.term_details_pop").is(":visible")) {
        jQuery("div.term_details_pop").css("max-height", jQuery(window).height() - jQuery("div.term_details_pop").offset().top * 2 + "px");
      }
    });

    // Use pop-up with flex via an iframe for "visualize" link
    jQuery("a.term_visualize").live("click", (function(){
      var ontologyid = jQuery(this).attr("data-bp_ontologyid");
      var conceptid = jQuery(this).attr("data-bp_conceptid");

      jQuery("#flexviz").html('<iframe src="/flexviz/'+ontologyid+'?conceptid='+conceptid+'" frameborder=0 height="500px" width="500px" scrolling="no"></iframe>');
      jQuery.facebox({ div: '#flexviz' });
    }));

		// Check for existing parameters/queries and update UI accordingly
		var params = jQuery.QueryString;
		if ("q" in params || "query" in params) {
			var query = ("q" in params) ? params["q"] : params["query"];
			jQuery("#search_keywords").val(query);
			
			if (params["exactmatch"] == "true") {
				jQuery("#search_exact_match").click();
			}
			
			if (params["searchproperties"] == "true") {
				jQuery("#search_include_props").click();
			}
			
			if ("ontologyids" in params) {
				var ontologyIds = params["ontologyids"].split(",");
				jQuery("#search_select_ontologies").attr("checked", false)
				jQuery("#ontology_ontologyId").val(ontologyIds);
			  jQuery("#ontology_ontologyId").trigger("liszt:updated");
			  jQuery("#search_select_ontologies").click().change();
			}
			
			jQuery("#search_button").click();
		} else if (jQuery("#search_keywords").val() != "") {
			jQuery("#search_button").click();
    }

    // Wire up pop-ups
    filter_ontologies.init();
    filter_matched.init();
	});
	
	// Datatables reset sort extension
	jQuery.fn.dataTableExt.oApi.fnSortNeutral = function ( oSettings ) {
		/* Remove any current sorting */
		oSettings.aaSorting = [];
		
		/* Sort display arrays so we get them in numerical order */
		oSettings.aiDisplay.sort( function (x,y) {
			return x-y;
		} );
		oSettings.aiDisplayMaster.sort( function (x,y) {
			return x-y;
		} );
		
		/* Redraw */
		oSettings.oApi._fnReDraw( oSettings );
	}
	
	var termHoverIn = function(){
		var additional = jQuery(this).children("span.additional");
		additional.show();
		additional.css("margin-top", jQuery(this).innerHeight() / 2 - additional.innerHeight() / 2 + "px");
	}
	
	var termHoverOut = function(){
		jQuery(this).children("span.additional").hide();
  }




var filter_ontologies = {
  init: function() {
    jQuery("#filter_ontologies").bind("click", function(e){bp_popup_init(e)});
    jQuery(".ont_filter").bind("click", function(e){filter_ontologies.filterOntology(e)});
    this.cleanup();
  },

  cleanup: function() {
    jQuery("html").click(bp_popup_cleanup);
    jQuery(document).keyup(function(e) {
      if (e.keyCode == 27) { bp_popup_cleanup(); } // esc
    });
  },

  filterOntology: function(e) {
    e.preventDefault();
    e.stopPropagation();

    var ontToFilter = jQuery(e.currentTarget);
    var filterText = ontToFilter.attr("data-bp_filter_label");

    resultsTable.fnFilter(filterText, 2, false, false);

    jQuery("#result_stats").html(jQuery(resultsTable).find("tr").length - 1 + " results");
    bp_popup_cleanup();
  }
}

var filter_matched = {
  init: function() {
    jQuery("#filter_matched").bind("click", function(e){bp_popup_init(e)});
    jQuery(".match_filter").bind("click", function(e){filter_matched.filterMatched(e)});
    this.cleanup();
  },

  cleanup: function() {
    jQuery("html").click(bp_popup_cleanup);
    jQuery(document).keyup(function(e) {
      if (e.keyCode == 27) { bp_popup_cleanup(); } // esc
    });
  },

  filterMatched: function(e) {
    e.preventDefault();
    e.stopPropagation();

    var matchToFilter = jQuery(e.currentTarget);
    var filterText = matchToFilter.attr("data-bp_filter_match");

    resultsTable.fnFilter(filterText, 1);

    jQuery("#result_stats").html(jQuery(resultsTable).find("tr").length - 1 + " results");
    bp_popup_cleanup();
  }
}


var bp_popup_init = function(e) {
  bp_popup_cleanup();
  e.preventDefault();
  e.stopPropagation()

  var popup = jQuery(e.currentTarget).parents(".popup_container");

  popup.children(".bp_popup_link_container").addClass("bp_popup_shadow");
  popup.find("a.bp_popup_link").css("z-index", "5000").addClass("bp_popup_link_active");
  popup.children(".bp_popup_list").show();
}

var bp_popup_cleanup = function() {
  jQuery(".bp_popup_link_container").removeClass("bp_popup_shadow");
  jQuery(".bp_popup_link").css("z-index", "").removeClass("bp_popup_link_active");
  jQuery(".bp_popup_list").hide();
}

</script>

<div style="padding: 1em;">
	<div id="search_input" style="margin-bottom: 1em;">
    <h1>Term Search</h1>
    <p>Enter keywords below to search for term matches in <%=$SITE%> ontologies.</p>
		<%=text_field :search, :keywords, :style => "width: 426px; height: 20px; float: left; margin-right: 1em;"%>
		
		<div id="search_options" style="padding-top: .6em; clear: both;">
      <!--<%=check_box :search, :exact_match%> <%=label :search, :exact_match, "Exact match only"%>&nbsp;&nbsp;&nbsp;-->
      <!--<%=check_box :search, :include_props%> <%=label :search, :include_props, "Also search property values"%>&nbsp;&nbsp;&nbsp;-->
			
      <!--<%=check_box :search, :select_ontologies%> <%=label :search, :select_ontologies, "Select ontologies to search"%>-->
			<div id="ontology_picker_options" style="margin-top: 1em; position: relative; left: 2px;">
        <%= render :partial => "shared/ontology_picker", :locals => { :sel_text => "Select ontologies to search" }%>
			</div>
    </div>

		<span id="search_spinner" style="display: none;">&nbsp;<img style="vertical-align: inherit;" src="/images/spinners/spinner_000000_16px.gif"></span>
    <%=button_to "Search", {}, :style => "font-size: .75em !important; margin-bottom: 1em;", :id => "search_button"%>
	</div>
	
	<div id="search_results_container" style="margin-top: .5em; clear: both;">
		
    <div id="result_stats" style="text-align: right; width: 850px;"></div>
    <table id="search_results" style="display: none; width: 850px;" class="zebra">
			<thead>
				<th style="width: 300px;">Term Name</th>
        <th style="width: 175px;" class="matched_in">Matched In 
          <span class="popup_container">
            <span class="bp_popup_link_container">
              <a href="javascript:void(0);" id="filter_matched" class="bp_popup_link">filter</a>
            </span>
            <div id="matched_filter_list" class="bp_popup_list" style="display: none;">
              <a href="javascript:void(0);" class="match_filter" data-bp_filter_match="">All Match Locations</a><br/>
              <a href="javascript:void(0);" class="match_filter" data-bp_filter_match="Preferred Name">Preferred Name</a><br/>
              <a href="javascript:void(0);" class="match_filter" data-bp_filter_match="Synonym">Synonym</a><br/>
              <a href="javascript:void(0);" class="match_filter" data-bp_filter_match="Term ID">Term ID</a><br/>
              <a href="javascript:void(0);" class="match_filter" data-bp_filter_match="Property">Property</a><br/>
            </div>
          </span>
        </th>
        <th style="width: 325px;">Ontology <span class="popup_container"><span class="bp_popup_link_container"><a href="javascript:void(0);" id="filter_ontologies" class="bp_popup_link">filter</a></span><div id="ontology_filter_list" class="bp_popup_list" style="display: none;"></div></span></th>
			</thead>
			<tbody id="search_results_body">
			</tbody>
		</table>
	</div>
</div>


<div id="flexviz" style="display: none;">
</div>
