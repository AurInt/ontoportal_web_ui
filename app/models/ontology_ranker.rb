class OntologyRanker

  WEIGHT = { 1352 => 7506, 1353 => 2975, 1422 => 2420, 1101 => 2023, 1032 => 904, 1000 => 580, 1057 => 488, 1415 => 424, 1351 => 299, 1498 => 277, 1016 => 276, 1123 => 273, 1009 => 258, 1136 => 257, 3008 => 239, 1350 => 223, 1125 => 185, 1053 => 161, 1423 => 153, 1245 => 151, 1427 => 149, 1070 => 134, 1343 => 134, 1041 => 125, 1012 => 116, 1035 => 112, 1149 => 109, 1344 => 109, 1348 => 105, 1040 => 103, 1411 => 102, 1290 => 98, 1499 => 97, 1084 => 96, 1533 => 93, 1051 => 93, 1037 => 92, 1090 => 90, 1005 => 90, 1007 => 87, 3018 => 84, 1069 => 81, 1076 => 80, 1104 => 79, 1141 => 79, 1006 => 75, 1132 => 74, 1083 => 67, 1424 => 67, 1425 => 60, 1107 => 58, 1587 => 53, 1095 => 53, 1404 => 51, 3019 => 50, 3030 => 49, 1575 => 48, 1640 => 48, 1332 => 47, 1015 => 47, 1311 => 45, 1110 => 43, 1576 => 42, 3003 => 39, 1397 => 39, 1648 => 36, 1413 => 34, 1112 => 34, 1341 => 33, 1638 => 32, 3032 => 31, 1099 => 30, 1092 => 30, 1030 => 30, 1115 => 30, 1401 => 28, 1048 => 27, 1019 => 26, 1660 => 25, 3016 => 24, 3035 => 24, 1540 => 23, 1081 => 23, 1043 => 21, 1105 => 20, 1109 => 20, 1414 => 19, 1652 => 18, 1314 => 17, 1362 => 17, 1082 => 16, 1393 => 16, 1621 => 16, 1516 => 15, 1321 => 15, 1489 => 15, 1150 => 15, 1507 => 14, 1011 => 14, 1131 => 14, 1064 => 13, 1630 => 13, 1025 => 13, 1042 => 13, 1573 => 13, 1354 => 13, 1049 => 12, 1526 => 12, 1410 => 12, 3033 => 12, 1108 => 12, 1038 => 12, 1148 => 11, 1497 => 11, 1091 => 11, 1407 => 11, 1430 => 10, 1444 => 10, 1059 => 10, 1055 => 10, 1553 => 10, 1586 => 10, 1062 => 10, 1671 => 10, 1058 => 10, 1065 => 10, 1013 => 9, 1694 => 9, 1627 => 9, 1050 => 9, 1616 => 9, 1237 => 9, 3042 => 9, 1580 => 8, 1370 => 8, 1613 => 8, 1060 => 8, 1126 => 8, 1658 => 8, 3043 => 8, 1426 => 8, 1052 => 8, 1068 => 8, 1532 => 7, 3025 => 6, 1128 => 6, 1504 => 6, 1569 => 6, 1429 => 6, 1491 => 6, 1347 => 6, 1550 => 6, 1078 => 6, 3020 => 5, 1560 => 5, 1146 => 5, 1585 => 5, 1247 => 5, 1581 => 5, 1417 => 5, 1484 => 5, 3002 => 5, 1510 => 5, 1029 => 5, 1588 => 5, 3015 => 5, 1651 => 5, 3028 => 5, 1054 => 4, 1568 => 4, 3021 => 4, 1522 => 4, 1130 => 4, 1142 => 4, 1583 => 4, 1144 => 4, 3013 => 4, 1666 => 4, 1639 => 4, 1439 => 4, 1693 => 4, 1528 => 4, 1031 => 4, 1328 => 4, 1046 => 4, 1615 => 4, 1461 => 4, 1659 => 4, 1699 => 4, 1632 => 4, 1545 => 4, 1257 => 3, 1152 => 3, 1044 => 3, 1061 => 3, 1530 => 0, 1534 => 0, 1222 => 0, 1056 => 0, 1114 => 0, 1683 => 0, 1684 => 0, 1680 => 0, 1023 => 0, 3022 => 0, 1134 => 0, 1089 => 0, 1116 => 0, 1487 => 0, 1304 => 0, 1438 => 0, 1537 => 0, 1067 => 0, 1582 => 0, 1675 => 0, 1158 => 0, 1541 => 0, 1047 => 0, 1001 => 0, 1633 => 0, 1063 => 0, 1544 => 0, 1008 => 0, 1672 => 0, 1626 => 0, 1702 => 0, 1689 => 0, 1017 => 0, 3017 => 0, 1506 => 0, 1106 => 0, 1440 => 0, 1020 => 0, 1529 => 0, 1578 => 0, 1596 => 0, 1667 => 0, 1698 => 0, 1642 => 0, 1654 => 0, 1631 => 0, 3001 => 0, 1647 => 0, 1643 => 0, 3045 => 0, 1641 => 0, 1625 => 0, 3007 => 0, 3046 => 0, 1697 => 0, 1701 => 0, 1649 => 0, 1668 => 0, 1653 => 0, 3038 => 0, 3044 => 0, 1661 => 0, 1629 => 0, 1021 => 0, 1517 => 0, 1022 => 0, 1682 => 0, 1670 => 0, 1509 => 0, 1515 => 0, 1614 => 0, 1681 => 0, 1679 => 0, 1520 => 0, 1406 => 0, 1183 => 0, 1024 => 0, 1088 => 0, 1584 => 0, 1027 => 0, 3009 => 0, 3000 => 0, 1077 => 0, 1010 => 0, 1026 => 0, 3004 => 0, 1686 => 0, 1501 => 0, 1521 => 0, 1539 => 0, 1402 => 0, 1381 => 0, 1033 => 0, 3012 => 0, 1428 => 0, 1524 => 0, 1523 => 0, 1086 => 0, 1100 => 0, 1505 => 0, 1190 => 0, 3006 => 0, 1087 => 0, 1085 => 0, 1398 => 0, 1565 => 0, 1335 => 0, 1094 => 0, 1567 => 0, 1655 => 0, 1656 => 0, 3014 => 0, 1369 => 0, 1349 => 0, 1014 => 0, 1399 => 0, 1409 => 0, 1036 => 0, 1490 => 0, 1039 => 0, 1192 => 0, 1135 => 0, 3024 => 0, 1657 => 0, 3031 => 0, 1676 => 0, 1552 => 0, 1500 => 0, 1538 => 0, 1122 => 0, 1249 => 0, 3029 => 0, 1665 => 0, 1224 => 0, 1696 => 0, 1394 => 0, 1488 => 0, 1419 => 0, 1536 => 0, 1535 => 0, 3005 => 0, 1700 => 0, 1692 => 0, 3034 => 0, 3037 => 0, 1494 => 0, 1418 => 0, 1570 => 0, 1571 => 0, 1572 => 0, 1688 => 0, 1650 => 0, 1172 => 0, 1527 => 0, 1555 => 0, 1574 => 0, 1691 => 0 }

  ##
  # Takes an array of integers, arrays, or hashes. If using array or hash, must provide location of ontology virtual id.
  # Options:
  # :position => location in the array (int) or hash key containing the virtual id
  def self.rank(ont_ary, options = {})
    return nil if !ont_ary.kind_of?(Array)
    position = options[:position]

    ranked = []
    not_ranked = []
    ont_ary.each do |ont|
      if position.nil?
        if WEIGHT.key?(ont.to_i)
          ranked << ont
        else
          not_ranked << ont
        end
      else
        if WEIGHT.key?(ont[position].to_i)
          ranked << ont
        else
          not_ranked << ont
        end
      end
    end

    # Sort ontologies
    if position.nil?
      ranked.sort! {|a,b| WEIGHT[b.to_i] <=> WEIGHT[a.to_i]}
    else
      # Get a ranked list of the virtual ids in the ranked set
      ranked.sort! {|a,b| WEIGHT[b[position].to_i] <=> WEIGHT[a[position].to_i]}
    end

    # Recombine the ranked and non-ranked
    ranked.concat not_ranked
  end

  def self.rank!(ont_ary, options = {})
    ont_ary = self.rank(ont_ary, options)
  end

end