- content_section = (params[:p]) ? params[:p] : "summary"
- concept_title = @concept.nil? ? "" : " - #{@concept.prefLabel} - Classes"
- @title = "#{@ontology.name}#{concept_title}"

- sub = @submission_latest
- details_available = true
- if sub.nil? || (sub.respond_to?(:status) && sub.status == 404)
  - details_available = false

= render :partial =>'layouts/header'

:javascript
  // Javascript History HTML5 API
  if ( typeof JSON === 'undefined' ) {
    var
      url = '/javascripts/history/json2.js',
      scriptEl = document.createElement('script');
    scriptEl.type = 'text/javascript';
    scriptEl.src = url;
    document.body.appendChild(scriptEl);
  }

  // Ontology viewer vars
  jQuery(document).data().bp.ont_viewer = {};
  jQuery(document).data().bp.ont_viewer.ontology_id = jQuery(document).data().bp.ontology.acronym;
  jQuery(document).data().bp.ont_viewer.ontology_version_id = jQuery(document).data().bp.submission_latest.submissionId;
  jQuery(document).data().bp.ont_viewer.ontology_name = "#{@ontology.name}";
  jQuery(document).data().bp.ont_viewer.org_site = "#{$ORG_SITE}";
  jQuery(document).data().bp.ont_viewer.concept_id = "#{params[:conceptid] || (@concept ? @concept.id : 'root')}";
  jQuery(document).data().bp.ont_viewer.content_section = "#{sanitize(h(content_section))}";
  jQuery(document).data().bp.ont_viewer.concept_param = "#{"conceptid=\#{params[:conceptid]}" unless params[:conceptid].nil? || params[:conceptid].empty?}";
  jQuery(document).data().bp.ont_viewer.concept_name = "#{@concept.prefLabel unless @concept.nil?}";
  jQuery(document).data().bp.ont_viewer.metadata_only = "#{@ontology.summaryOnly}";
  jQuery(document).data().bp.ont_viewer.current_purl = "#{@current_purl}";
  jQuery(document).data().bp.ont_viewer.purl_prefix = "#{($PURL_ENABLED ? $PURL_PREFIX+"/"+@ontology.acronym : '')}";
  jQuery(document).data().bp.ont_viewer.concept_name_title = (jQuery(document).data().bp.ont_viewer.concept_name == "") ?
      "" : " - " + jQuery(document).data().bp.ont_viewer.concept_name;

-# Modal dialog for creating a new mapping (must reside in a top-level position in the document to display properly).
%div#createNewMappingModal{class: "modal fade", tabindex: "-1", role: "dialog", "aria-labelledby": "createNewMappingLabel"}
  %div.modal-dialog.modal-lg{role: "document"}
    %div.modal-content
      %div.modal-header
        %button.close{type: "button", "data-dismiss": "modal", "aria-label": "Close"}
          %span{"aria-hidden": "true"} &times;
        %h4#createNewMappingLabel.modal-title
      %div.createNewMappingModalBody.modal-body
      %div.modal-footer
        = submit_tag("Create Mapping", class: "btn btn-default", id: "create_mapping_button")
        %button{type: "button", class: "btn btn-default", "data-dismiss": "modal"} Close

-# Modal dialog for getting a permanent link to a class (must reside in a top-level position in the document to display properly).
%div#classPermalinkModal{class: "modal fade", tabindex: "-1", role: "dialog", aria: {labelledby: "classPermalinkLabel", hidden: "true"}}
  %div.modal-dialog.modal-dialog-centered.modal-lg{role: "document"}
    %div.modal-content
      %div.modal-header
        %h5#classPermalinkLabel.modal-title Permanent link to this class
        %button.close{type: "button", "data-dismiss": "modal", "aria-label": "Close"}
          %span{"aria-hidden": "true"} &times;
      %div.modal-body
        = text_field_tag("purl_input", nil, class: "form-control")
      %div.modal-footer
        %button.btn.btn-secondary{"data-dismiss": "modal"} Close

-# A header of sorts to display ontology name and subset of details.
%div.row.pt-md-4.pb-2
  %div.col
    %div.card
      %h3.card-header
        = @ontology.name
      %div.card-body
        - if details_available
          %p.card-text
            = sanitize(sub.description)
      %div.card-body
        - unless (@ontology.summaryOnly || @ont_restricted || @submissions.empty?)
          = link_to(@submissions.first.id + "/download?apikey=#{get_apikey}", class: "btn btn-secondary btn-sm") do
            Download latest version
            %i.fa.fa-lg.fa-arrow-circle-down
        - if @ontology.admin?(session[:user])
          = link_to(edit_ontology_path(@ontology.acronym), class: "btn btn-secondary btn-sm") do
            Edit ontology details
            %i.fa.fa-lg.fa-pencil-square
          = link_to(new_ontology_submission_path(@ontology.acronym), class: "btn btn-secondary btn-sm") do
            Add submission
            %i.fa.fa-lg.fa-plus-circle
          - unless (@submission_latest.nil? || (@submission_latest.respond_to?(:status) && @submission_latest.status == 404))
            = link_to(edit_ontology_submission_path(@ontology.acronym, @submission_latest.submissionId), class: "btn btn-secondary btn-sm") do
              = "Edit latest submission (#{@submission_latest.version})"
              %i.fa.fa-lg.fa-pencil-square
      - if (details_available && !sub.released.nil?)
        %div.card-footer.text-muted
          Last uploaded:
          = l(Date.parse(sub.creationDate), format: :monthfull_day_year)

%div.row.pb-2
  %div.col
    %div.card
      %div.card-header
        -# Tabbed navigation bar for ontology content sections
        %ul.nav.nav-pills.card-header-pills{id: "navbar-ontology", role: "tablist"}
          %li.nav-item 
            = link_to("Summary", ontology_path(@ontology.acronym, p: "summary"), |
                id: "ont-summary-tab", class: "nav-link", role: "tab", data: {bp_ont_page: "summary", toggle: "tab", target: "#ont_summary_content"}, |
                aria: {controls: "ont_summary_content", selected: "false"}) |
          - unless @ontology.summaryOnly
            %li.nav-item 
              = link_to("Classes", ontology_path(@ontology.acronym, p: "classes"), |
                  id: "ont-classes-tab", class: "nav-link", role: "tab", data: {bp_ont_page: "classes", toggle: "tab", target: "#ont_classes_content"}, |
                  aria: {controls: "ont_classes_content", selected: "false"}) |
            %li.nav-item 
              = link_to("Properties", ontology_path(@ontology.acronym, p: "properties"), |
                  id: "ont-properties-tab", class: "nav-link", role: "tab", data: {bp_ont_page: "properties", toggle: "tab", target: "#ont_properties_content"}, |
                  aria: {controls: "ont_properties_content", selected: "false"}) |
          %li.nav-item 
            = link_to("Notes", ontology_path(@ontology.acronym, p: "notes"), |
                id: "ont-notes-tab", class: "nav-link", role: "tab", data: {bp_ont_page: "notes", toggle: "tab", target: "#ont_notes_content"}, |
                aria: {controls: "ont_notes_content", selected: "false"}) |
          - unless @ontology.summaryOnly
            %li.nav-item
              = link_to("Mappings", ontology_path(@ontology.acronym, p: "mappings"), |
                  id: "ont-mappings-tab", class: "nav-link", role: "tab", data: {bp_ont_page: "mappings", toggle: "tab", target: "#ont_mappings_content"}, |
                  aria: {controls: "ont_mappings_content", selected: "false"}) |
            %li.nav-item 
              = link_to("Widgets", ontology_path(@ontology.acronym, p: "widgets"), |
                  id: "ont-widgets-tab", class: "nav-link", role: "tab", data: {bp_ont_page: "widgets", toggle: "tab", target: "#ont_widgets_content"}, |
                  aria: {controls: "ont_widgets_content", selected: "false"}) |
      %div.card-body
        -# Tab panes for displaying ontology content sections
        %div.tab-content{id: "ontology_content"}
          %div.tab-pane{id: "ont_summary_content", role: "tabpanel", aria: {labelledby: "ont-summary-tab"}}
            - if content_section.eql?("summary")
              = yield
          %div.tab-pane{id: "ont_classes_content", role: "tabpanel", aria: {labelledby: "ont-classes-tab"}}
            - if content_section.eql?("classes")
              = yield
          %div.tab-pane{id: "ont_properties_content", role: "tabpanel", aria: {labelledby: "ont-properties-tab"}}
            - if content_section.eql?("properties")
              = yield
          %div.tab-pane{id: "ont_notes_content", role: "tabpanel", aria: {labelledby: "ont-notes-tab"}}
            - if content_section.eql?("notes")
              = yield
          %div.tab-pane{id: "ont_mappings_content", role: "tabpanel", aria: {labelledby: "ont-mappings-tab"}}
            - if content_section.eql?("mappings")
              = yield
          %div.tab-pane{id: "ont_widgets_content", role: "tabpanel", aria: {labelledby: "ont-widgets-tab"}}
            - if content_section.eql?("widgets")
              = yield

- if Rails.env.appliance?
  = render partial: "footer_appliance"
  = javascript_include_tag "application"
  = render partial: "ga_tracking"
- else
  = render partial: "layouts/footer"




