
<script type="text/javascript">


 
function buildWait(){
   YAHOO.namespace("example.container");
	// Initialize the temporary Panel to display while waiting for external content to load
	YAHOO.example.container.wait = new YAHOO.widget.Panel("wait",  
				{ width:"240px", 
				  fixedcenter:true, 
				  close:false, 
				  draggable:false, 
				  zindex:4,
				  modal:true,
				  visible:false
				} 
			);

	YAHOO.example.container.wait.setHeader("Loading, please wait...");
	YAHOO.example.container.wait.setBody('<img src="http://us.i1.yimg.com/us.yimg.com/i/us/per/gr/gp/rel_interstitial_loading.gif" />');
	YAHOO.example.container.wait.render(document.body);
	
	
	
}



// Selects the current clicked node.
function toggleSelected(node){

	var index=1;
	
	// can get in endless loop if you jump to a node that is free floating.
	nullCount = 0;
	while (nullCount < 20){
		if(tree.getNodeByIndex(index)!=null){
			if (tree.getNodeByIndex(index).labelStyle=='ygtvlabel-selected'){
				tree.getNodeByIndex(index).labelStyle='ygtvlabel'
				break;
			}
		}else{
			nullCount ++;
		}
	index++;
	}
	node.labelStyle="ygtvlabel-selected";	
	
}

// adds a node to the tree
function addTreeNode(rootNode, nodeInfo) {
		var newNodeDetails = "javascript:onClickTreeNode('" + nodeInfo.ontology_node_id + "');";
		var newNodeData = { label:nodeInfo.ontology_node_name, id:nodeInfo.ontology_node_id, href:newNodeDetails };
		var newNode = new YAHOO.widget.MenuNode(newNodeData, rootNode, false);
		if (nodeInfo.ontology_node_child_count > 0) {
			newNode.setDynamicLoad(loadNodeData);
		}		
	}

// Ajax call to load in the child nodes
function loadNodeData(node, fnLoadComplete) {
		var id = node.data.id;

		var responseSuccess = function(o)
		{
			var nodeQue=new Array();

			var respTxt = o.responseText;
			// turns text into JSon
			var respObj = eval('(' + respTxt + ')');

			if ( typeof(respObj.nodes) != "undefined") {
				for (var i=0; i < respObj.nodes.length; i++) {
//					var name = respObj.nodes[i].ontology_node_name + " (" + respObj.nodes[i].ontology_node_parent_assoc + ")";
					var name = respObj.nodes[i].ontology_node_name;
					var nodeDetails = "javascript:onClickTreeNode('" + respObj.nodes[i].ontology_node_id + "');";
					var newNodeData = { label:name, id:respObj.nodes[i].ontology_node_id, href:nodeDetails };
					var newNode = new YAHOO.widget.MenuNode(newNodeData, node, false);
					if (respObj.nodes[i].ontology_node_child_count > 0) {
						// tells if it needs to be ajaxable, hides + sign if no children
						newNode.setDynamicLoad(loadNodeData);
					}
					
					// Que up the children
					nodeQue[i]=respObj.nodes[i].ontology_node_id
					
				}
			}
			// sets up the nodes to be que'd
		    queData(nodeQue,'Biological-process')
			
				
			// redraws the tree -- needs to be done every time the nodes are modified
		
			tree.draw();
			fnLoadComplete();	
		}
		
		var responseFailure = function(o){
			alert('responseFailure: ' +	o.statusText);
		}
		
		var callback =
		{
			success:responseSuccess,
			failure:responseFailure
		};
		
		// simple Yahoo ajax call
		var cObj = YAHOO.util.Connect.asyncRequest('GET','/Biological-process/'+id+"?callback=children",callback);
	}




	

	
		//Builds the initial tree on load
        function buildTree() {
		   var nodeQue=new Array();
		   //create a new tree:
		   tree = new YAHOO.widget.TreeView("treeDiv1");
		   
		   //turn dynamic loading on for entire tree:
		   // tree.setDynamicLoad(loadNodeData);
		   
		   //get root node for tree:
		   var root = tree.getRoot();
		   
		   //add child nodes for tree; 

			var myobj = { label: "biological_process ", id:"GO:0008150",href:"javascript:onClickTreeNode('GO:0008150')" };

    		   		    var NodeGO0008150 = new YAHOO.widget.MenuNode(myobj, root, false);
NodeGO0008150.setDynamicLoad(loadNodeData);
NodeGO0008150.labelStyle="ygtvlabel-selected"
var myobj = { label: "cellular_component ", id:"GO:0005575",href:"javascript:onClickTreeNode('GO:0005575')" };

    		   		    var NodeGO0005575 = new YAHOO.widget.MenuNode(myobj, root, false);
NodeGO0005575.setDynamicLoad(loadNodeData);
var myobj = { label: "molecular_function ", id:"GO:0003674",href:"javascript:onClickTreeNode('GO:0003674')" };

    		   		    var NodeGO0003674 = new YAHOO.widget.MenuNode(myobj, root, false);
NodeGO0003674.setDynamicLoad(loadNodeData);

			
			nodeQue[0]="GO:0008150"
			
			
			nodeQue[1]="GO:0005575"
			
			
			nodeQue[2]="GO:0003674"
			
			
			// sets up the nodes to be que'd
		    queData(nodeQue,'Biological-process')
				
		// tells the tree that when it is clicked to activate the toggleSelected
		tree.subscribe("labelClick", function(node) { 
			toggleSelected(node) 
	    });	
		   
		   //render tree with these toplevel nodes; all descendants of these nodes
		   //will be generated as needed by the dynamic loader.
		   tree.draw();
		}
		
		// what happens when someone clicks the LABEL of the tree nodes
		function onClickTreeNode(node_id) {
		
			
			var responseSuccess = function(o)
			{
				var respTxt = o.responseText;
				tabData = respTxt.split("|||")
					// the tabs
							document.getElementById('tab1').innerHTML=tabData[0]
							document.getElementById('tab2').innerHTML=tabData[1]
							document.getElementById('tab3').innerHTML=tabData[2]
							document.getElementById('tab4').innerHTML=tabData[3]
							document.getElementById('tab5').innerHTML=tabData[4]					
					 tree.draw();
						YAHOO.example.container.wait.hide();
						setCache(node_id,tabData)
					
			};	
			
			var responseFailure = function(o){
				alert('responseFailure: ' +	o.statusText);
					YAHOO.example.container.wait.hide();
			};

			var callback =
			{
				success:responseSuccess,
				failure:responseFailure
			};
			
		
		if(getCache(node_id)!=null){
			tabData = getCache(node_id)
			document.getElementById('tab1').innerHTML=tabData[0]
			document.getElementById('tab2').innerHTML=tabData[1]
			document.getElementById('tab3').innerHTML=tabData[2]
			document.getElementById('tab4').innerHTML=tabData[3]
			document.getElementById('tab5').innerHTML=tabData[4]	
			 tree.draw();
				
		}else{
			YAHOO.example.container.wait.show();
		YAHOO.util.Connect.asyncRequest('GET','/Biological-process/'+node_id+"?callback=load",callback);		
		}	
		
		}
function init(){
	
	buildWait();
	buildTree();
	
}
		
YAHOO.util.Event.onDOMReady(init); 


</script>

